// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: test.proto
// Protobuf C++ Version: 6.32.1

#include "test.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr testCommResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        res_info_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        more_info_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ret_code_{0} {}

template <typename>
PROTOBUF_CONSTEXPR testCommResponse::testCommResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(testCommResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct testCommResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR testCommResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~testCommResponseDefaultTypeInternal() {}
  union {
    testCommResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 testCommResponseDefaultTypeInternal _testCommResponse_default_instance_;

inline constexpr testCommRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR testCommRequest::testCommRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(testCommRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct testCommRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR testCommRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~testCommRequestDefaultTypeInternal() {}
  union {
    testCommRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 testCommRequestDefaultTypeInternal _testCommRequest_default_instance_;
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_test_2eproto = nullptr;
static const ::_pb::ServiceDescriptor* PROTOBUF_NONNULL
    file_level_service_descriptors_test_2eproto[1];
const ::uint32_t
    TableStruct_test_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::testCommRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::testCommRequest, _impl_.count_),
        PROTOBUF_FIELD_OFFSET(::testCommRequest, _impl_.name_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::testCommResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::testCommResponse, _impl_.ret_code_),
        PROTOBUF_FIELD_OFFSET(::testCommResponse, _impl_.res_info_),
        PROTOBUF_FIELD_OFFSET(::testCommResponse, _impl_.more_info_),
        2,
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::testCommRequest)},
        {7, sizeof(::testCommResponse)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::_testCommRequest_default_instance_._instance,
    &::_testCommResponse_default_instance_._instance,
};
const char descriptor_table_protodef_test_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\ntest.proto\".\n\017testCommRequest\022\r\n\005count"
    "\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\"I\n\020testCommResponse"
    "\022\020\n\010ret_code\030\001 \001(\005\022\020\n\010res_info\030\002 \001(\t\022\021\n\t"
    "more_info\030\003 \001(\t27\n\004Comm\022/\n\010testComm\022\020.te"
    "stCommRequest\032\021.testCommResponseB\003\200\001\001b\006p"
    "roto3"
};
static ::absl::once_flag descriptor_table_test_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_test_2eproto = {
    false,
    false,
    205,
    descriptor_table_protodef_test_2eproto,
    "test.proto",
    &descriptor_table_test_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_test_2eproto::offsets,
    file_level_enum_descriptors_test_2eproto,
    file_level_service_descriptors_test_2eproto,
};
// ===================================================================

class testCommRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<testCommRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(testCommRequest, _impl_._has_bits_);
};

testCommRequest::testCommRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, testCommRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:testCommRequest)
}
PROTOBUF_NDEBUG_INLINE testCommRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::testCommRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

testCommRequest::testCommRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const testCommRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, testCommRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  testCommRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.count_ = from._impl_.count_;

  // @@protoc_insertion_point(copy_constructor:testCommRequest)
}
PROTOBUF_NDEBUG_INLINE testCommRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        name_(arena) {}

inline void testCommRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.count_ = {};
}
testCommRequest::~testCommRequest() {
  // @@protoc_insertion_point(destructor:testCommRequest)
  SharedDtor(*this);
}
inline void testCommRequest::SharedDtor(MessageLite& self) {
  testCommRequest& this_ = static_cast<testCommRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL testCommRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) testCommRequest(arena);
}
constexpr auto testCommRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(testCommRequest),
                                            alignof(testCommRequest));
}
constexpr auto testCommRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_testCommRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &testCommRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<testCommRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &testCommRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<testCommRequest>(), &testCommRequest::ByteSizeLong,
              &testCommRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(testCommRequest, _impl_._cached_size_),
          false,
      },
      &testCommRequest::kDescriptorMethods,
      &descriptor_table_test_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull testCommRequest_class_data_ =
        testCommRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
testCommRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&testCommRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(testCommRequest_class_data_.tc_table);
  return testCommRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 28, 2>
testCommRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(testCommRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    testCommRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::testCommRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(testCommRequest, _impl_.name_)}},
    // int32 count = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(testCommRequest, _impl_.count_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(testCommRequest, _impl_.count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 count = 1;
    {PROTOBUF_FIELD_OFFSET(testCommRequest, _impl_.count_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(testCommRequest, _impl_.name_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\17\0\4\0\0\0\0\0"
    "testCommRequest"
    "name"
  }},
};
PROTOBUF_NOINLINE void testCommRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:testCommRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_.count_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL testCommRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const testCommRequest& this_ = static_cast<const testCommRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL testCommRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const testCommRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:testCommRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 count = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_count(), target);
    }
  }

  // string name = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "testCommRequest.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:testCommRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t testCommRequest::ByteSizeLong(const MessageLite& base) {
  const testCommRequest& this_ = static_cast<const testCommRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t testCommRequest::ByteSizeLong() const {
  const testCommRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:testCommRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string name = 2;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // int32 count = 1;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void testCommRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<testCommRequest*>(&to_msg);
  auto& from = static_cast<const testCommRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:testCommRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_count() != 0) {
        _this->_impl_.count_ = from._impl_.count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void testCommRequest::CopyFrom(const testCommRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:testCommRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void testCommRequest::InternalSwap(testCommRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.count_, other->_impl_.count_);
}

::google::protobuf::Metadata testCommRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class testCommResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<testCommResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(testCommResponse, _impl_._has_bits_);
};

testCommResponse::testCommResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, testCommResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:testCommResponse)
}
PROTOBUF_NDEBUG_INLINE testCommResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::testCommResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        res_info_(arena, from.res_info_),
        more_info_(arena, from.more_info_) {}

testCommResponse::testCommResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const testCommResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, testCommResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  testCommResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.ret_code_ = from._impl_.ret_code_;

  // @@protoc_insertion_point(copy_constructor:testCommResponse)
}
PROTOBUF_NDEBUG_INLINE testCommResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        res_info_(arena),
        more_info_(arena) {}

inline void testCommResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ret_code_ = {};
}
testCommResponse::~testCommResponse() {
  // @@protoc_insertion_point(destructor:testCommResponse)
  SharedDtor(*this);
}
inline void testCommResponse::SharedDtor(MessageLite& self) {
  testCommResponse& this_ = static_cast<testCommResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.res_info_.Destroy();
  this_._impl_.more_info_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL testCommResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) testCommResponse(arena);
}
constexpr auto testCommResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(testCommResponse),
                                            alignof(testCommResponse));
}
constexpr auto testCommResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_testCommResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &testCommResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<testCommResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &testCommResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<testCommResponse>(), &testCommResponse::ByteSizeLong,
              &testCommResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(testCommResponse, _impl_._cached_size_),
          false,
      },
      &testCommResponse::kDescriptorMethods,
      &descriptor_table_test_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull testCommResponse_class_data_ =
        testCommResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
testCommResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&testCommResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(testCommResponse_class_data_.tc_table);
  return testCommResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 42, 2>
testCommResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(testCommResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    testCommResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::testCommResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 ret_code = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(testCommResponse, _impl_.ret_code_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(testCommResponse, _impl_.ret_code_)}},
    // string res_info = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(testCommResponse, _impl_.res_info_)}},
    // string more_info = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(testCommResponse, _impl_.more_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 ret_code = 1;
    {PROTOBUF_FIELD_OFFSET(testCommResponse, _impl_.ret_code_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string res_info = 2;
    {PROTOBUF_FIELD_OFFSET(testCommResponse, _impl_.res_info_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string more_info = 3;
    {PROTOBUF_FIELD_OFFSET(testCommResponse, _impl_.more_info_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\20\0\10\11\0\0\0\0"
    "testCommResponse"
    "res_info"
    "more_info"
  }},
};
PROTOBUF_NOINLINE void testCommResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:testCommResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.res_info_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.more_info_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.ret_code_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL testCommResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const testCommResponse& this_ = static_cast<const testCommResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL testCommResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const testCommResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:testCommResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 ret_code = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_ret_code() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_ret_code(), target);
    }
  }

  // string res_info = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_res_info().empty()) {
      const ::std::string& _s = this_._internal_res_info();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "testCommResponse.res_info");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string more_info = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_more_info().empty()) {
      const ::std::string& _s = this_._internal_more_info();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "testCommResponse.more_info");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:testCommResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t testCommResponse::ByteSizeLong(const MessageLite& base) {
  const testCommResponse& this_ = static_cast<const testCommResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t testCommResponse::ByteSizeLong() const {
  const testCommResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:testCommResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string res_info = 2;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_res_info().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_res_info());
      }
    }
    // string more_info = 3;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_more_info().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_more_info());
      }
    }
    // int32 ret_code = 1;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_ret_code() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_ret_code());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void testCommResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<testCommResponse*>(&to_msg);
  auto& from = static_cast<const testCommResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:testCommResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_res_info().empty()) {
        _this->_internal_set_res_info(from._internal_res_info());
      } else {
        if (_this->_impl_.res_info_.IsDefault()) {
          _this->_internal_set_res_info("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_more_info().empty()) {
        _this->_internal_set_more_info(from._internal_more_info());
      } else {
        if (_this->_impl_.more_info_.IsDefault()) {
          _this->_internal_set_more_info("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_ret_code() != 0) {
        _this->_impl_.ret_code_ = from._impl_.ret_code_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void testCommResponse::CopyFrom(const testCommResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:testCommResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void testCommResponse::InternalSwap(testCommResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.res_info_, &other->_impl_.res_info_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.more_info_, &other->_impl_.more_info_, arena);
  swap(_impl_.ret_code_, other->_impl_.ret_code_);
}

::google::protobuf::Metadata testCommResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

const ::google::protobuf::ServiceDescriptor* PROTOBUF_NONNULL Comm::descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_test_2eproto);
  return file_level_service_descriptors_test_2eproto[0];
}

const ::google::protobuf::ServiceDescriptor* PROTOBUF_NONNULL Comm::GetDescriptor() {
  return descriptor();
}

void Comm::testComm(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                         const ::testCommRequest* PROTOBUF_NONNULL,
                         ::testCommResponse* PROTOBUF_NONNULL,
                         ::google::protobuf::Closure* PROTOBUF_NULLABLE done) {
  controller->SetFailed("Method testComm() not implemented.");
  done->Run();
}

void Comm::CallMethod(
    const ::google::protobuf::MethodDescriptor* PROTOBUF_NONNULL method,
    ::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
    const ::google::protobuf::Message* PROTOBUF_NONNULL request,
    ::google::protobuf::Message* PROTOBUF_NONNULL response, ::google::protobuf::Closure* PROTOBUF_NULLABLE done) {
  ABSL_DCHECK_EQ(method->service(), file_level_service_descriptors_test_2eproto[0]);
  switch (method->index()) {
    case 0:
      this->testComm(controller, ::google::protobuf::DownCastMessage<::testCommRequest>(request),
                   ::google::protobuf::DownCastMessage<::testCommResponse>(response), done);
      break;

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& Comm::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* PROTOBUF_NONNULL method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::testCommRequest::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()->GetPrototype(
          method->input_type());
  }
}

const ::google::protobuf::Message& Comm::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* PROTOBUF_NONNULL method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::testCommResponse::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()->GetPrototype(
          method->output_type());
  }
}

Comm_Stub::Comm_Stub(::google::protobuf::RpcChannel* PROTOBUF_NULLABLE channel)
    : channel_(channel), owns_channel_(false) {}

Comm_Stub::Comm_Stub(
    ::google::protobuf::RpcChannel* PROTOBUF_NULLABLE channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
    : channel_(channel),
      owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}

Comm_Stub::~Comm_Stub() {
  if (owns_channel_) delete channel_;
}

void Comm_Stub::testComm(
    ::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
    const ::testCommRequest* PROTOBUF_NONNULL request, ::testCommResponse* PROTOBUF_NONNULL response,
    ::google::protobuf::Closure* PROTOBUF_NULLABLE done) {
  channel_->CallMethod(descriptor()->method(0), controller,
                       request, response, done);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_test_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

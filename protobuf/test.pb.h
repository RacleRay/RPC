// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: test.proto
// Protobuf C++ Version: 6.32.1

#ifndef test_2eproto_2epb_2eh
#define test_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/service.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_test_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_test_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_test_2eproto;
}  // extern "C"
class testCommRequest;
struct testCommRequestDefaultTypeInternal;
extern testCommRequestDefaultTypeInternal _testCommRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull testCommRequest_class_data_;
class testCommResponse;
struct testCommResponseDefaultTypeInternal;
extern testCommResponseDefaultTypeInternal _testCommResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull testCommResponse_class_data_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class testCommResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:testCommResponse) */ {
 public:
  inline testCommResponse() : testCommResponse(nullptr) {}
  ~testCommResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(testCommResponse* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(testCommResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR testCommResponse(::google::protobuf::internal::ConstantInitialized);

  inline testCommResponse(const testCommResponse& from) : testCommResponse(nullptr, from) {}
  inline testCommResponse(testCommResponse&& from) noexcept
      : testCommResponse(nullptr, ::std::move(from)) {}
  inline testCommResponse& operator=(const testCommResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline testCommResponse& operator=(testCommResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const testCommResponse& default_instance() {
    return *reinterpret_cast<const testCommResponse*>(
        &_testCommResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(testCommResponse& a, testCommResponse& b) { a.Swap(&b); }
  inline void Swap(testCommResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(testCommResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  testCommResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<testCommResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const testCommResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const testCommResponse& from) { testCommResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(testCommResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "testCommResponse"; }

 protected:
  explicit testCommResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  testCommResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const testCommResponse& from);
  testCommResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, testCommResponse&& from) noexcept
      : testCommResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResInfoFieldNumber = 2,
    kMoreInfoFieldNumber = 3,
    kRetCodeFieldNumber = 1,
  };
  // string res_info = 2;
  void clear_res_info() ;
  const ::std::string& res_info() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_res_info(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_res_info();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_res_info();
  void set_allocated_res_info(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_res_info() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_res_info(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_res_info();

  public:
  // string more_info = 3;
  void clear_more_info() ;
  const ::std::string& more_info() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_more_info(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_more_info();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_more_info();
  void set_allocated_more_info(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_more_info() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_more_info(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_more_info();

  public:
  // int32 ret_code = 1;
  void clear_ret_code() ;
  ::int32_t ret_code() const;
  void set_ret_code(::int32_t value);

  private:
  ::int32_t _internal_ret_code() const;
  void _internal_set_ret_code(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:testCommResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 42,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const testCommResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr res_info_;
    ::google::protobuf::internal::ArenaStringPtr more_info_;
    ::int32_t ret_code_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull testCommResponse_class_data_;
// -------------------------------------------------------------------

class testCommRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:testCommRequest) */ {
 public:
  inline testCommRequest() : testCommRequest(nullptr) {}
  ~testCommRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(testCommRequest* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(testCommRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR testCommRequest(::google::protobuf::internal::ConstantInitialized);

  inline testCommRequest(const testCommRequest& from) : testCommRequest(nullptr, from) {}
  inline testCommRequest(testCommRequest&& from) noexcept
      : testCommRequest(nullptr, ::std::move(from)) {}
  inline testCommRequest& operator=(const testCommRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline testCommRequest& operator=(testCommRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const testCommRequest& default_instance() {
    return *reinterpret_cast<const testCommRequest*>(
        &_testCommRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(testCommRequest& a, testCommRequest& b) { a.Swap(&b); }
  inline void Swap(testCommRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(testCommRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  testCommRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<testCommRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const testCommRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const testCommRequest& from) { testCommRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(testCommRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "testCommRequest"; }

 protected:
  explicit testCommRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  testCommRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const testCommRequest& from);
  testCommRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, testCommRequest&& from) noexcept
      : testCommRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 2,
    kCountFieldNumber = 1,
  };
  // string name = 2;
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // int32 count = 1;
  void clear_count() ;
  ::int32_t count() const;
  void set_count(::int32_t value);

  private:
  ::int32_t _internal_count() const;
  void _internal_set_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:testCommRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 28,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const testCommRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::int32_t count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull testCommRequest_class_data_;

// ===================================================================


// -------------------------------------------------------------------

class Comm_Stub;
class Comm : public ::google::protobuf::Service {
 protected:
  Comm() = default;

 public:
  using Stub = Comm_Stub;

  Comm(const Comm&) = delete;
  Comm& operator=(const Comm&) = delete;
  virtual ~Comm() = default;

  static const ::google::protobuf::ServiceDescriptor* PROTOBUF_NONNULL descriptor();

  virtual void testComm(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::testCommRequest* PROTOBUF_NONNULL request,
                        ::testCommResponse* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done);

  // implements Service ----------------------------------------------
  const ::google::protobuf::ServiceDescriptor* PROTOBUF_NONNULL GetDescriptor() override;

  void CallMethod(
      const ::google::protobuf::MethodDescriptor* PROTOBUF_NONNULL method,
      ::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
      const ::google::protobuf::Message* PROTOBUF_NONNULL request,
      ::google::protobuf::Message* PROTOBUF_NONNULL response,
      ::google::protobuf::Closure* PROTOBUF_NULLABLE done) override;

  const ::google::protobuf::Message& GetRequestPrototype(
      const ::google::protobuf::MethodDescriptor* PROTOBUF_NONNULL method) const override;

  const ::google::protobuf::Message& GetResponsePrototype(
      const ::google::protobuf::MethodDescriptor* PROTOBUF_NONNULL method) const override;
};

class Comm_Stub final : public Comm {
 public:
  Comm_Stub(::google::protobuf::RpcChannel* PROTOBUF_NULLABLE channel);
  Comm_Stub(::google::protobuf::RpcChannel* PROTOBUF_NULLABLE channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);

  Comm_Stub(const Comm_Stub&) = delete;
  Comm_Stub& operator=(const Comm_Stub&) = delete;

  ~Comm_Stub() override;

  inline ::google::protobuf::RpcChannel* PROTOBUF_NULLABLE channel() { return channel_; }

  // implements Comm ------------------------------------------
  void testComm(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::testCommRequest* PROTOBUF_NONNULL request,
                        ::testCommResponse* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done) override;

 private:
  ::google::protobuf::RpcChannel* PROTOBUF_NULLABLE channel_;
  bool owns_channel_;
};
// ===================================================================



// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// testCommRequest

// int32 count = 1;
inline void testCommRequest::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::int32_t testCommRequest::count() const {
  // @@protoc_insertion_point(field_get:testCommRequest.count)
  return _internal_count();
}
inline void testCommRequest::set_count(::int32_t value) {
  _internal_set_count(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:testCommRequest.count)
}
inline ::int32_t testCommRequest::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void testCommRequest::_internal_set_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// string name = 2;
inline void testCommRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& testCommRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:testCommRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void testCommRequest::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:testCommRequest.name)
}
inline ::std::string* PROTOBUF_NONNULL testCommRequest::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:testCommRequest.name)
  return _s;
}
inline const ::std::string& testCommRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void testCommRequest::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL testCommRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE testCommRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:testCommRequest.name)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void testCommRequest::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:testCommRequest.name)
}

// -------------------------------------------------------------------

// testCommResponse

// int32 ret_code = 1;
inline void testCommResponse::clear_ret_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ret_code_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::int32_t testCommResponse::ret_code() const {
  // @@protoc_insertion_point(field_get:testCommResponse.ret_code)
  return _internal_ret_code();
}
inline void testCommResponse::set_ret_code(::int32_t value) {
  _internal_set_ret_code(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:testCommResponse.ret_code)
}
inline ::int32_t testCommResponse::_internal_ret_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ret_code_;
}
inline void testCommResponse::_internal_set_ret_code(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ret_code_ = value;
}

// string res_info = 2;
inline void testCommResponse::clear_res_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.res_info_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& testCommResponse::res_info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:testCommResponse.res_info)
  return _internal_res_info();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void testCommResponse::set_res_info(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.res_info_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:testCommResponse.res_info)
}
inline ::std::string* PROTOBUF_NONNULL testCommResponse::mutable_res_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_res_info();
  // @@protoc_insertion_point(field_mutable:testCommResponse.res_info)
  return _s;
}
inline const ::std::string& testCommResponse::_internal_res_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.res_info_.Get();
}
inline void testCommResponse::_internal_set_res_info(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.res_info_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL testCommResponse::_internal_mutable_res_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.res_info_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE testCommResponse::release_res_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:testCommResponse.res_info)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.res_info_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.res_info_.Set("", GetArena());
  }
  return released;
}
inline void testCommResponse::set_allocated_res_info(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.res_info_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.res_info_.IsDefault()) {
    _impl_.res_info_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:testCommResponse.res_info)
}

// string more_info = 3;
inline void testCommResponse::clear_more_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.more_info_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& testCommResponse::more_info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:testCommResponse.more_info)
  return _internal_more_info();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void testCommResponse::set_more_info(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.more_info_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:testCommResponse.more_info)
}
inline ::std::string* PROTOBUF_NONNULL testCommResponse::mutable_more_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_more_info();
  // @@protoc_insertion_point(field_mutable:testCommResponse.more_info)
  return _s;
}
inline const ::std::string& testCommResponse::_internal_more_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.more_info_.Get();
}
inline void testCommResponse::_internal_set_more_info(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.more_info_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL testCommResponse::_internal_mutable_more_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.more_info_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE testCommResponse::release_more_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:testCommResponse.more_info)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.more_info_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.more_info_.Set("", GetArena());
  }
  return released;
}
inline void testCommResponse::set_allocated_more_info(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.more_info_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.more_info_.IsDefault()) {
    _impl_.more_info_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:testCommResponse.more_info)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // test_2eproto_2epb_2eh
